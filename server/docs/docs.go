// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/createUser": {
            "post": {
                "description": "Create a user account: name, password, studentId and grade",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admins"
                ],
                "summary": "Create a user account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User's name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User's password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User's ID",
                        "name": "studentId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User's grade",
                        "name": "grade",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Admin's current token",
                        "name": "token",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/services.Response"
                        }
                    }
                }
            }
        },
        "/admin/deleteUser": {
            "post": {
                "description": "Delete a user account",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admins"
                ],
                "summary": "Delete a user account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User's ID",
                        "name": "studentId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Admin's current token",
                        "name": "token",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/services.Response"
                        }
                    }
                }
            }
        },
        "/admin/findUser": {
            "get": {
                "description": "Find a user account",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admins"
                ],
                "summary": "Find a user account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User's ID",
                        "name": "studentId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Admin's current token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/services.Response"
                        }
                    }
                }
            }
        },
        "/admin/findUserList": {
            "get": {
                "description": "Find all user account",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admins"
                ],
                "summary": "Find all user account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin's current token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/services.Response"
                        }
                    }
                }
            }
        },
        "/admin/update": {
            "post": {
                "description": "Update an admin's name and password",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admins"
                ],
                "summary": "Update an admin's info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin's name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Admin's password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Admin's current token",
                        "name": "token",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/services.Response"
                        }
                    }
                }
            }
        },
        "/admin/updateUser": {
            "post": {
                "description": "Update a user account: name, password, studentId and grade",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admins"
                ],
                "summary": "Update a user account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User's name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User's password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User's ID",
                        "name": "studentId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User's grade",
                        "name": "grade",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Admin's current token",
                        "name": "token",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/services.Response"
                        }
                    }
                }
            }
        },
        "/padmin/login": {
            "post": {
                "description": "Verify an admin account",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admins"
                ],
                "summary": "Admin Login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin's name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Admin's password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/services.Response"
                        }
                    }
                }
            }
        },
        "/puser/login": {
            "post": {
                "description": "Verify a user account",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Admin Login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User's ID",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User's password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/services.Response"
                        }
                    }
                }
            }
        },
        "/user/create": {
            "post": {
                "description": "Create a user account",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create a user account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User's name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User's password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User's student ID",
                        "name": "studentId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User's grade",
                        "name": "grade",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/services.Response"
                        }
                    }
                }
            }
        },
        "/user/delete": {
            "post": {
                "description": "Delete a user account",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete a user account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User's student ID",
                        "name": "studentId",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/services.Response"
                        }
                    }
                }
            }
        },
        "/user/find": {
            "get": {
                "description": "Delete a user account",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete a user account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User's student ID",
                        "name": "studentId",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/services.Response"
                        }
                    }
                }
            }
        },
        "/user/update": {
            "post": {
                "description": "Update a user account",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update a user account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User's name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User's password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User's student ID",
                        "name": "studentId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User's grade",
                        "name": "grade",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/services.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "services.LoginResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "services.Response": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:9090",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "gin+gorm crud 测试swagger",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
